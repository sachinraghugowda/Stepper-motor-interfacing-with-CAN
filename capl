/*@!Encoding:1252*/
includes
{
  
}

variables
{
  message LLM_MwgModul myMsg ;
  message LLM_MwgModul myMsg2 ;
  message step myMsg4;
  message step myMsg3;
  msTimer delay;
  msTimer delay1;
  qword i = 1;
  qword j=1;
}

on start{
  
  
   myMsg3.DLC = 8;               // MVP function (to move to the relative position we need)
  myMsg3.byte(0) = 0x04;
  myMsg3.byte(1) = 0x01; 
  myMsg3.byte(2) = 0x00;
  myMsg3.byte(3) = 0x00;
  myMsg3.byte(4) = 0x00;
  myMsg3.byte(5) = 0x0A; 
  myMsg3.byte(6) = 0x00;
  myMsg3.byte(7) = 0x00;
  //setTimer(delay, 5000);
  output(myMsg3); 
  
  
  myMsg4.DLC = 8;               // MVP function (to move to the relative position we need)
  myMsg4.byte(0) = 0x06;
  myMsg4.byte(1) = 0x08; 
  myMsg4.byte(2) = 0x00;
  myMsg4.byte(3) = 0x00;
  myMsg4.byte(4) = 0x00;
  myMsg4.byte(5) = 0x00; 
  myMsg4.byte(6) = 0x00;
  myMsg4.byte(7) = 0x00;
  //setTimer(delay, 5000);
  output(myMsg4); 
  
}


on message CAN2.*{
  
  if (j<=109000)
  {

  if (this.byte(6)==0x01)
 {
  
     myMsg.DLC = 8;
  myMsg.byte(0) = 0x7;
  myMsg.byte(1) = 0x1; 
  myMsg.byte(2) = 0x3;
  myMsg.byte(3) = 0x11;
  output(myMsg);
    
  myMsg2.DLC = 8;
  myMsg2.byte(0) = 0x7;
  myMsg2.byte(1) = 0x3; 
  myMsg2.byte(2) = 0x1;
  myMsg2.byte(3) = 0xD;
  output(myMsg2);
  
   //i++;
  
  //setTimer (delay, 25);
  
    if(i<=109000)
     {
      setTimer (delay, 50);
      write("number of turns =%d", i);
     //write("PZD_408 = %d  (Fahrprofil Pause)", this.byte(6));
      }
			
  }
   else
   {
     setTimer (delay1, 100);
    //output (myMsg4);
   }
}
}
on timer delay{
 output(myMsg3);
 output(myMsg4);
 i++;
 j++;
 }

 on timer delay1{
 output(myMsg4);
 }
 
  /*
  //if(this.dir != tx){
   write("stepper motor status byte 0 = %d", this.byte(0));
  write("stepper motor status byte 1 = %d", this.byte(1));
  write("stepper motor status byte 2 = %d", this.byte(2));
  write("stepper motor status byte 3 = %d", this.byte(3));
  write("stepper motor status byte 4 = %d", this.byte(4));
  write("stepper motor status byte 5 = %d", this.byte(5));
  write("stepper motor status byte 6 = %d", this.byte(6));
  write("stepper motor status byte 7 = %d", this.byte(7));
  //}
  */


  
